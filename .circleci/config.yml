# Ruby CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1
  ruby: circleci/ruby@2

default_environment: &default_environment
  RAILS_ENV: test
  RACK_ENV: test
  FCREPO_TEST_PORT: 8080
  BUNDLE_JOBS: 4
  BUNDLE_RETRY: 3
  NOKOGIRI_USE_SYSTEM_LIBRARIES: true
  ENGINE_CART_RAILS_OPTIONS: --skip-git --skip-bundle --skip-listen --skip-spring --skip-yarn --skip-keeps --skip-action-cable --skip-coffee --skip-puma --skip-test
  COVERALLS_PARALLEL: true
  WD_INSTALL_DIR: ./webdriver
  KARMA_BROWSER: ChromeHeadless
  KARMA_HOSTNAME: localhost
  SKIP_IIIF_PRINT_BULKRAX_VERSION_REQUIREMENT: true
  NODE_OPTIONS: --openssl-legacy-provider

jobs:
  build:
    docker:
      - image: cimg/ruby:2.7.8-browsers
      - image: cimg/redis:6.2
      - image: ghcr.io/samvera/fcrepo4:4.7.5
        environment:
          CATALINA_OPTS: "-Djava.awt.headless=true -Dfile.encoding=UTF-8 -server -Xms512m -Xmx1024m -XX:NewSize=256m -XX:MaxNewSize=256m -XX:PermSize=256m -XX:MaxPermSize=256m -XX:+DisableExplicitGC"
      - image: solr:7
        command: bin/solr -cloud -noprompt -f -p 8985
      - image: cimg/mysql:8.0
        command: --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_DATABASE: essi_test
          MYSQL_USER: essi
          MYSQL_PASSWORD: essi

    resource_class: medium+
    parallelism: 4
    working_directory: ~/repo

    environment:
      <<: *default_environment

    steps:
      - checkout
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver

      # BUNDLE_PATH is unset to allow for `bundle config path` to take precedence.
      - run:
          name: Extra environment setup
          command: |
            echo 'unset BUNDLE_PATH' >> $BASH_ENV

      - run:
          name: Install system deps
          command: |
            echo 'Acquire::Retries "5";' | sudo tee -a /etc/apt/apt.conf.d/80retries
            sudo apt-get update -qq
            sudo apt-get install -y --no-install-recommends build-essential default-jre-headless libpq-dev \
                                    libreoffice-writer libreoffice-impress imagemagick unzip ghostscript mediainfo \
                                    libtesseract-dev libleptonica-dev liblept5 tesseract-ocr \
                                    libopenjp2-tools libxml2-dev libsqlite3-dev libjemalloc2
            sudo mkdir -p -m 777 /opt/fits
            curl -fSL -o /tmp/fits-1.6.0.zip https://github.com/harvard-lts/fits/releases/download/1.6.0/fits-1.6.0.zip
            mv /tmp/fits-1.6.0.zip /opt/fits/fits.zip
            cd /opt/fits && unzip fits.zip && chmod +X fits.sh
            rm fits.zip /opt/fits/tools/mediainfo/linux/libmediainfo.so.0 /opt/fits/tools/mediainfo/linux/libzen.so.0
            sed -i 's/\(<tool.*TikaTool.*>\)/<!--\1-->/' /opt/fits/xml/fits.xml
            sudo ln -s /usr/lib/*-linux-gnu/libjemalloc.so.2 /usr/local/lib/libjemalloc.so.2
            echo 'export PATH=/opt/fits:$PATH LD_PRELOAD=/usr/local/lib/libjemalloc.so.2' >> $BASH_ENV
            sudo gem update --system --no-document

      # Download and cache dependencies
      - restore_cache:
          keys:
            - dependencies-v6-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - dependencies-v6-{{ .Branch }}
            - dependencies-v6-

      - run:
          name: Install dependencies
          command: |
            bundle config path $CIRCLE_WORKING_DIRECTORY/vendor/bundle
            bundle install
            bundle pristine webdrivers
            bundle clean
            bundle exec rails webdrivers:chromedriver:update
            yarn

      - save_cache:
          paths:
            - ./public/uv
            - ./node_modules
            - ./vendor/bundle
            - ./webdriver
          key: dependencies-v6-{{ .Branch }}-{{ checksum "Gemfile.lock" }}

      #    - run:
      #        name: Call Rubocop
      #        command: bundle exec rubocop

#      - run:
#          name: Start headless Chrome
#          command: google-chrome-stable --headless --disable-gpu --no-sandbox --remote-debugging-port=9222 http://localhost
#          background: true

      - run:
          name: Load config into SolrCloud
          command: |
            cd solr/conf
            zip -1 -r solr_hyrax_config.zip ./*
            curl -H "Content-type:application/octet-stream" --data-binary @solr_hyrax_config.zip "http://localhost:8985/solr/admin/configs?action=UPLOAD&name=hyrax"
            curl -H 'Content-type: application/json' http://localhost:8985/api/collections/ -d '{create: {name: hydra-test, config: hyrax, numShards: 1}}'

      - ruby/rspec-test

      - store_artifacts:
          path: tmp/capybara
          destination: capybara-screenshots
