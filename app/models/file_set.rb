# Generated by hyrax:models:install
class FileSet < ActiveFedora::Base
  include ESSI::FileSetMetadata
  include ESSI::RemoteLookupMetadata
  include ::Hyrax::FileSetBehavior
  include ESSI::SolrErrorBehavior
  include ESSI::OrderedMembersNilValues

  directly_contains_one :preservation_master_file, through: :files, type: ::RDF::URI('http://pcdm.org/use#PreservationMasterFile'), class_name: 'Hydra::PCDM::File'

  self.indexer = ESSI::FileSetIndexer

  def collection_branding_info
    @collection_branding_info ||= CollectionBrandingInfo.where(file_set_id: self.id).first
  end

  def collection_branding?
    collection_branding_info.present?
  end

  def ocr_language
    [language.entries,
     parent&.language&.entries,
     ESSI.config.dig(:essi, :ocr_language),
     'eng'].map { |l| Tesseract.try_languages(l) }.select(&:present?).first
  end

  # @todo revisit after Hyrax 3.x upgrade
  def original_file_id
    @original_file_id ||= self.original_file&.id
  end

  def external?
    ESSI.external_storage.external?(self)
  end

  def external_id
    @external_id ||= ESSI.external_storage.external_id(self)
  end

  # supplement to Hyrax::WorkingDirectory.find_or_retrieve, but aware of external storage
  def find_or_retrieve(file_id: original_file&.id, filepath: nil)
    return filepath if filepath && File.exist?(filepath)
    if self.external?
      filepath = ESSI.external_storage.find_or_retrieve(self, file_id: file_id, filepath: filepath)
    else
      filepath = Hyrax::WorkingDirectory.find_or_retrieve(file_id, self.id, filepath)
    end
    return filepath
  end
end
